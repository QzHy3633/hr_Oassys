<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hr.mapper.AoaAttendsListMapper">
  <resultMap id="BaseResultMap" type="com.hr.entity.AoaAttendsList">
    <id column="attends_id" jdbcType="BIGINT" property="attendsId" />
    <result column="attends_ip" jdbcType="VARCHAR" property="attendsIp" />
    <result column="attends_remark" jdbcType="VARCHAR" property="attendsRemark" />
    <result column="attends_time" jdbcType="TIMESTAMP" property="attendsTime" />
    <result column="status_id" jdbcType="BIGINT" property="statusId" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="attends_user_id" jdbcType="BIGINT" property="attendsUserId" />
    <result column="attend_hmtime" jdbcType="VARCHAR" property="attendHmtime" />
    <result column="week_ofday" jdbcType="VARCHAR" property="weekOfday" />
    <result column="holiday_days" jdbcType="DOUBLE" property="holidayDays" />
    <result column="holiday_start" jdbcType="DATE" property="holidayStart" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    attends_id, attends_ip, attends_remark, attends_time, status_id, type_id, attends_user_id, 
    attend_hmtime, week_ofday, holiday_days, holiday_start
  </sql>
  <select id="selectByExample" parameterType="com.hr.entity.AoaAttendsListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aoa_attends_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from aoa_attends_list
    where attends_id = #{attendsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from aoa_attends_list
    where attends_id = #{attendsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hr.entity.AoaAttendsListExample">
    delete from aoa_attends_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hr.entity.AoaAttendsList">
    insert into aoa_attends_list (attends_id, attends_ip, attends_remark, 
      attends_time, status_id, type_id, 
      attends_user_id, attend_hmtime, week_ofday, 
      holiday_days, holiday_start)
    values (#{attendsId,jdbcType=BIGINT}, #{attendsIp,jdbcType=VARCHAR}, #{attendsRemark,jdbcType=VARCHAR}, 
      #{attendsTime,jdbcType=TIMESTAMP}, #{statusId,jdbcType=BIGINT}, #{typeId,jdbcType=BIGINT}, 
      #{attendsUserId,jdbcType=BIGINT}, #{attendHmtime,jdbcType=VARCHAR}, #{weekOfday,jdbcType=VARCHAR}, 
      #{holidayDays,jdbcType=DOUBLE}, #{holidayStart,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.hr.entity.AoaAttendsList">
    insert into aoa_attends_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attendsId != null">
        attends_id,
      </if>
      <if test="attendsIp != null">
        attends_ip,
      </if>
      <if test="attendsRemark != null">
        attends_remark,
      </if>
      <if test="attendsTime != null">
        attends_time,
      </if>
      <if test="statusId != null">
        status_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="attendsUserId != null">
        attends_user_id,
      </if>
      <if test="attendHmtime != null">
        attend_hmtime,
      </if>
      <if test="weekOfday != null">
        week_ofday,
      </if>
      <if test="holidayDays != null">
        holiday_days,
      </if>
      <if test="holidayStart != null">
        holiday_start,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attendsId != null">
        #{attendsId,jdbcType=BIGINT},
      </if>
      <if test="attendsIp != null">
        #{attendsIp,jdbcType=VARCHAR},
      </if>
      <if test="attendsRemark != null">
        #{attendsRemark,jdbcType=VARCHAR},
      </if>
      <if test="attendsTime != null">
        #{attendsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusId != null">
        #{statusId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="attendsUserId != null">
        #{attendsUserId,jdbcType=BIGINT},
      </if>
      <if test="attendHmtime != null">
        #{attendHmtime,jdbcType=VARCHAR},
      </if>
      <if test="weekOfday != null">
        #{weekOfday,jdbcType=VARCHAR},
      </if>
      <if test="holidayDays != null">
        #{holidayDays,jdbcType=DOUBLE},
      </if>
      <if test="holidayStart != null">
        #{holidayStart,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hr.entity.AoaAttendsListExample" resultType="java.lang.Long">
    select count(*) from aoa_attends_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aoa_attends_list
    <set>
      <if test="record.attendsId != null">
        attends_id = #{record.attendsId,jdbcType=BIGINT},
      </if>
      <if test="record.attendsIp != null">
        attends_ip = #{record.attendsIp,jdbcType=VARCHAR},
      </if>
      <if test="record.attendsRemark != null">
        attends_remark = #{record.attendsRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.attendsTime != null">
        attends_time = #{record.attendsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statusId != null">
        status_id = #{record.statusId,jdbcType=BIGINT},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=BIGINT},
      </if>
      <if test="record.attendsUserId != null">
        attends_user_id = #{record.attendsUserId,jdbcType=BIGINT},
      </if>
      <if test="record.attendHmtime != null">
        attend_hmtime = #{record.attendHmtime,jdbcType=VARCHAR},
      </if>
      <if test="record.weekOfday != null">
        week_ofday = #{record.weekOfday,jdbcType=VARCHAR},
      </if>
      <if test="record.holidayDays != null">
        holiday_days = #{record.holidayDays,jdbcType=DOUBLE},
      </if>
      <if test="record.holidayStart != null">
        holiday_start = #{record.holidayStart,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aoa_attends_list
    set attends_id = #{record.attendsId,jdbcType=BIGINT},
      attends_ip = #{record.attendsIp,jdbcType=VARCHAR},
      attends_remark = #{record.attendsRemark,jdbcType=VARCHAR},
      attends_time = #{record.attendsTime,jdbcType=TIMESTAMP},
      status_id = #{record.statusId,jdbcType=BIGINT},
      type_id = #{record.typeId,jdbcType=BIGINT},
      attends_user_id = #{record.attendsUserId,jdbcType=BIGINT},
      attend_hmtime = #{record.attendHmtime,jdbcType=VARCHAR},
      week_ofday = #{record.weekOfday,jdbcType=VARCHAR},
      holiday_days = #{record.holidayDays,jdbcType=DOUBLE},
      holiday_start = #{record.holidayStart,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hr.entity.AoaAttendsList">
    update aoa_attends_list
    <set>
      <if test="attendsIp != null">
        attends_ip = #{attendsIp,jdbcType=VARCHAR},
      </if>
      <if test="attendsRemark != null">
        attends_remark = #{attendsRemark,jdbcType=VARCHAR},
      </if>
      <if test="attendsTime != null">
        attends_time = #{attendsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusId != null">
        status_id = #{statusId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="attendsUserId != null">
        attends_user_id = #{attendsUserId,jdbcType=BIGINT},
      </if>
      <if test="attendHmtime != null">
        attend_hmtime = #{attendHmtime,jdbcType=VARCHAR},
      </if>
      <if test="weekOfday != null">
        week_ofday = #{weekOfday,jdbcType=VARCHAR},
      </if>
      <if test="holidayDays != null">
        holiday_days = #{holidayDays,jdbcType=DOUBLE},
      </if>
      <if test="holidayStart != null">
        holiday_start = #{holidayStart,jdbcType=DATE},
      </if>
    </set>
    where attends_id = #{attendsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hr.entity.AoaAttendsList">
    update aoa_attends_list
    set attends_ip = #{attendsIp,jdbcType=VARCHAR},
      attends_remark = #{attendsRemark,jdbcType=VARCHAR},
      attends_time = #{attendsTime,jdbcType=TIMESTAMP},
      status_id = #{statusId,jdbcType=BIGINT},
      type_id = #{typeId,jdbcType=BIGINT},
      attends_user_id = #{attendsUserId,jdbcType=BIGINT},
      attend_hmtime = #{attendHmtime,jdbcType=VARCHAR},
      week_ofday = #{weekOfday,jdbcType=VARCHAR},
      holiday_days = #{holidayDays,jdbcType=DOUBLE},
      holiday_start = #{holidayStart,jdbcType=DATE}
    where attends_id = #{attendsId,jdbcType=BIGINT}
  </update>
</mapper>